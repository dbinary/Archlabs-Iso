#!/usr/bin/env bash

# written by nate for openbox

# will try to find currently open default applications and move to that desktop

# set your default applications
MUSIC_PLAYER="audacious"
TEXT_EDITOR="geany"

help="\n  Usage: al-focus [option]  available options\n
  -term   - runs default terminal emulator
  -file   - runs default file manager
  -web    - runs default web browser
  -edit   - runs default text editor
  -music  - runs default music player"


if [[ "$@" == *web* ]]; then
  # try to find browser already open
  fire_fox=$(wmctrl -l | grep -i "Firefox" | cut -d " " -f3 | head -n1)
  chro_me=$(wmctrl -l | grep -i "Chrome" | cut -d " " -f3 | head -n1)
  ope_ra=$(wmctrl -l | grep -i "Opera" | cut -d " " -f3 | head -n1)
  chro_mium=$(wmctrl -l | grep -i "Chromium" | cut -d " " -f3 | head -n1)
  if [[ "$chro_me" =~ ^[0-9]$ ]]; then
    web_desktop="$chro_me"

  elif [[ "$chro_mium" =~ ^[0-9]$ ]]; then
    web_desktop="$chro_mium"

  elif [[ "$ope_ra" =~ ^[0-9]$ ]]; then
    web_desktop="$ope_ra"

  else
    web_desktop="$fire_fox"

  fi # if none of the above the $web_desktop will be empty


  # if browser exists go to that desktop
  if [[ "$web_desktop" =~ ^[0-9]$ ]]; then
    wmctrl -s "$web_desktop"

  else  # if browser doesnt exist, open it then go to that desktop
    exo-open --launch WebBrowser
    wmctrl -s "$web_desktop"
    exit 0

  fi


elif [[ "$@" == *file* ]]; then
  # try to find file manager already open
  file_desktop=$(wmctrl -l | grep -i "File" | cut -d " " -f3 | head -n1)

  # if file manager exists go to that desktop
  if [[ "$file_desktop" =~ ^[0-9]$ ]]; then
    wmctrl -s "$file_desktop"

  else # if file manager doesnt exist, open it then go to that desktop
    wmctrl -s 1
    exo-open --launch FileManager
    exit 0

  fi


elif [[ "$@" == *term* ]]; then
  # try to find terminals already open
  terminal_desktop=$(wmctrl -l | grep -i "${USER}@" | cut -d " " -f3 | head -n1)

  # if terminal exists go to that desktop
  if [[ "$terminal_desktop" =~ ^[0-9]$ ]]; then
    wmctrl -s "$terminal_desktop"

  else # if terminal doesnt exist, open it then go to that desktop
    wmctrl -s "$terminal_desktop"
    exo-open --launch TerminalEmulator
    exit 0

  fi

elif [[ "$@" == *music* ]]; then
  # try to find music players already open
  lolly_pop=$(wmctrl -l | grep -i "lollypop" | cut -d " " -f3 | head -n1)
  rythm_box=$(wmctrl -l | grep -i "rythmbox" | cut -d " " -f3 | head -n1)
  clemen_tine=$(wmctrl -l | grep -i "clementine" | cut -d " " -f3 | head -n1)
  auda_cious=$(wmctrl -l | grep -i "audacious" | cut -d " " -f3 | head -n1)
  if [[ "$lolly_pop" =~ ^[0-9]$ ]]; then
    music_desktop="$lolly_pop"

  elif [[ "$rythm_box" =~ ^[0-9]$ ]]; then
    music_desktop="$rythm_box"

  elif [[ "$clemen_tine" =~ ^[0-9]$ ]]; then
    music_desktop="$clemen_tine"

  else
    music_desktop="$auda_cious"

  fi # if none of the above the $music_desktop will be empty


  # if music player exists go to that desktop
  if [[ "$music_desktop" =~ ^[0-9]$ ]]; then
    wmctrl -s "$music_desktop"

  else # if music player doesnt exist, open it then go to that desktop
    wmctrl -s 0
    $MUSIC_PLAYER &
    exit 0

  fi

elif [[ "$@" == *edit* ]]; then
  # try to find editor already open
  mouse_pad=$(wmctrl -l | grep -i "mousepad" | cut -d " " -f3 | head -n1)
  at_om=$(wmctrl -l | grep -i "atom" | cut -d " " -f3 | head -n1)
  sub_lime=$(wmctrl -l | grep -i "sublime" | cut -d " " -f3 | head -n1)
  gea_ny=$(wmctrl -l | grep -i "geany" | cut -d " " -f3 | head -n1)
  if [[ "$mouse_pad" =~ ^[0-9]$ ]]; then
    editor_desktop="$mouse_pad"

  elif [[ "$at_om" =~ ^[0-9]$ ]]; then
    editor_desktop="$at_om"

  elif [[ "$sub_lime" =~ ^[0-9]$ ]]; then
    editor_desktop="$sub_lime"

  else
    editor_desktop="$gea_ny"

  fi

  # if editor exists go to that desktop
  if [[ "$editor_desktop" =~ ^[0-9]$ ]]; then
    wmctrl -s "$editor_desktop"

  else # if editor doesnt exist, open it then go to that desktop
    wmctrl -s 4
    $TEXT_EDITOR &
    exit 0

  fi

elif [[ "$@" == *h* ]]; then
  clear
  echo -e "$help"

else
  clear
  echo -e "$help"
  exit 1

fi

exit 0
